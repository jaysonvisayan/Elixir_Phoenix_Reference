use Mix.Config

# For production, we often load configuration from external
# sources, such as your system environment. For this reason,
# you won't find the :http configuration below, but set inside
# AuthWeb.Endpoint.init/2 when load_from_system_env is
# true. Any dynamic configuration should be done there.
#
# Don't forget to configure the url host to something meaningful,
# Phoenix uses this information when generating URLs.
#
# Finally, we also include the path to a cache manifest
# containing the digested version of static files. This
# manifest is generated by the mix phx.digest task
# which you typically run after static files are built.
config :auth, AuthWeb.Endpoint,
  load_from_system_env: true,
  http: [port: "${PORT}"],
  secret_key_base: "${SECRET_KEY_BASE}",
  url: [host: "${HOST}", port: "${PORT}"],
  cache_static_manifest: "priv/static/cache_manifest.json",
  server: true,
  root: ".",
  version: Application.spec(:auth, :vsn)

# Do not print debug messages in production
config :logger, level: :info

config :auth, Auth.Guardian,
  issuer: "${ISSUER}", # Name of your app/company/product
  secret_key: "${SECRET_KEY_BASE}"

config :sentry,
  dsn: "${SENTRY_DNS}",
  environment_name: String.to_atom("${SENTRY_ENV}"),
  enable_source_code_context: true,
  root_source_code_path: File.cwd!,
  tags: %{
    env: "${SENTRY_ENV}",
    app_version: "#{Application.spec(:auth, :vsn)}"
  },
  included_environments: [:prod, :staging, :uat, :migration, :autotest, :prod_staging]

config :auth, AuthWeb.Endpoint,
  mg_url: "${MG_URL}"
